<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_Robot" Id="{d50c368b-652f-4516-b34d-9545576d1fa6}" SpecialFunc="None">
    <Declaration><![CDATA[//Todo - Add flags for if communicating, program info, 
FUNCTION_BLOCK FB_Robot
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	robotPose 		: Structure_RobotPose;	//Stores robot pose

	//----------Inputs From Robot ----------
	x_pose_1 AT %I* : USINT; //Signal 1-8
	x_pose_2 AT %I* : USINT; //Signal 9-16
	y_pose_1 AT %I* : USINT; //Signal 17-25
	y_pose_2 AT %I* : USINT; //Signal 26-32
	z_pose_1 AT %I* : USINT; //Signal 33-40
	z_pose_2 AT %I* : USINT; //Signal 41-48
	o_pose_1 AT %I* : USINT; //Signal 49-56
	o_pose_2 AT %I* : USINT; //Signal 57-64
	a_pose_1 AT %I* : USINT; //Signal 65-72
	a_pose_2 AT %I* : USINT; //Signal 73-80
	t_pose_1 AT %I* : USINT; //Signal 81-88
	t_pose_2 AT %I* : USINT; //Signal 89-96
	inRobotMotorOn		: BOOL; //Signal number 97
	inRobotError		: BOOL; //Signal 98
	inRobotAutomaticMode	: BOOL; //Signal 99
	inRobotAtHome				: BOOL; //Signal 100
	inRobotInTeach				: BOOL; //Signal 101
	inRobotCycleStart				: BOOL; //Signal 102
	inRobotPowerOn				: BOOL; //Signal 103
	inRobotPoseDataIsSent		: BOOL; //Signal 104
	inRobotEStopOn			: BOOL; //Signal 105
	inRobotBatteryAlarm			: BOOL; //Signal 106
	inRobotToolNumberCurrent		: USINT; //Signal 107-109
	inRobotToolNumberRequest		: USINT; //Signal 110-112
	inRobotReleaseTool			: BOOL; //Signal 113
	inRobotGrabTool				: BOOL; //Signal 114
	inProgramRunning				: BOOL; //Signal 115
	sigs97104 AT %I*			: USINT;
	sigs105112 AT %I*			: USINT;
	sigs113120 AT %I*			: USINT;
	
	//----------Outputs To Robot ----------
	outRobotTurnMotorOn			: BOOL; //Signal 1001
	outRobotResetError				: BOOL; //Signal 1002
	outRobotStartCycle				: BOOL; //Signal 1003
	outRobotResetProgram			: BOOL; //Signal 1004
	outRobotStartProgram				: BOOL; //Signal 1005
	outRobotRunHold		 		: BOOL; //Signal 1006
	outRobotHome					: BOOL; //Signal 1007
	outRobotToolReleased			: BOOL; //Signal 1008
	outRobotToolGrabbed				: BOOL; //Signal 1009
	outRobotProgramChoice			: USINT; //Signals 1017-1020
	outRobotProgramOption1			: BOOL; //Signal 1021
	outRobotProgramOption2			: BOOL; //Signal 1022
	outRobotProgramOption3			: BOOL; //Signal 1023
	sigs10011008	AT %Q*		: USINT;
	sigs10091016	AT %Q*		: USINT;
	sigs10171024	AT %Q*		: USINT;
	sigs10251032	AT %Q*		: USINT;
	sigs10331040	AT %Q*		: USINT;
	sigs10411048	AT %Q*		: USINT;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[Update_Status();

//Change request to home robot once robot is in home position
	IF inRobotAtHome OR inRobotError THEN 
		outRobotHome := FALSE;
	END_IF]]></ST>
    </Implementation>
    <Method Name="Home_Robot" Id="{eca540c4-31fc-4643-aeb8-caefcff4553d}">
      <Declaration><![CDATA[//Send home command to robot
METHOD Home_Robot
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF inRobotAtHome THEN
	outRobotHome := FALSE;
ELSE 
	outRobotHome := TRUE;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Program_Select" Id="{5ccc5e7e-14d0-4912-bf3c-54f9c88aeb76}">
      <Declaration><![CDATA[// Select the robot program based on HMI inputs

METHOD Program_Select
VAR_INPUT
	programChoice :	USINT;
	option1 : BOOL;
	option2 : BOOL;
	option3 : BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[outRobotProgramChoice := programChoice;
outRobotProgramOption1 := option1;
outRobotProgramOption2	:= option2;
outRobotProgramOption3	:= option3;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Robot_Manual_Control" Id="{ed6ccda4-2af5-42af-8ac3-98592d92e5da}">
      <Declaration><![CDATA[//Not Implemented
METHOD Robot_Manual_Control
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="RunHold_Robot" Id="{feac628f-72cf-4100-8d56-47c2e35d8c99}">
      <Declaration><![CDATA[METHOD RunHold_Robot
VAR_INPUT
	RunHold : BOOL; //True for run, False for hold
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[outRobotRunHold := RunHold;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Start_Robot" Id="{95ede5df-1a05-4c33-b6a8-dcc0ec83997b}">
      <Declaration><![CDATA[//Resume the Robot 
METHOD Start_Robot
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[outRobotRunHold := True;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Update_Status" Id="{1be56ac6-764b-4729-954d-f7379608e62a}">
      <Declaration><![CDATA[//Updates the robot pose, run status and IOs in Beckhoff system
//TODO make flag that verifies pose is being sent
METHOD Update_Status
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// RobotPose
robotPose.xPose := UINT_TO_INT(x_pose_2)*256 + UINT_TO_INT(x_pose_1) - 4000;
robotPose.yPose := UINT_TO_INT(y_pose_2)*256 + UINT_TO_INT(y_pose_1) - 4000;
robotPose.zPose := UINT_TO_INT(z_pose_2)*256 + UINT_TO_INT(z_pose_1) - 4000;
robotPose.oPose := UINT_TO_INT(o_pose_2)*256 + UINT_TO_INT(o_pose_1) - 400;
robotPose.aPose := UINT_TO_INT(a_pose_2)*256 + UINT_TO_INT(a_pose_1) - 400;
robotPose.tPose := UINT_TO_INT(t_pose_2)*256 + UINT_TO_INT(t_pose_1) - 400;

// Robot signals
sigs10011008.0 := outRobotTurnMotorOn;
sigs10011008.1 := outRobotResetError;
sigs10011008.2 := outRobotStartCycle;
sigs10011008.3 := outRobotResetProgram;
sigs10011008.4 := outRobotStartProgram;
sigs10011008.5 := outRobotRunHold;
sigs10011008.6 := outRobotHome;
sigs10011008.7 := outRobotToolReleased;
sigs10091016.0 := outRobotToolGrabbed;
sigs10171024   := outRobotProgramChoice;
sigs10171024.4 := outRobotProgramOption1;
sigs10171024.5 := outRobotProgramOption2;
sigs10171024.6 := outRobotProgramOption3;

inRobotMotorOn := sigs97104.0;
inRobotError := sigs97104.1;
inRobotAutomaticMode := sigs97104.2;
inRobotAtHome := sigs97104.3;
inRobotInTeach := sigs97104.4;
inRobotCycleStart := sigs97104.5;
inRobotPowerOn := sigs97104.6;
inRobotPoseDataIsSent := sigs97104.7;
inRobotEStopOn := sigs105112.0;
inRobotBatteryAlarm := sigs105112.1;
inRobotToolNumberCurrent := 0;
inRobotToolNumberCurrent := inRobotToolNumberCurrent OR (BIT_TO_USINT(sigs105112.2) * 1);
inRobotToolNumberCurrent := inRobotToolNumberCurrent OR (BIT_TO_USINT(sigs105112.3) * 2);
inRobotToolNumberCurrent := inRobotToolNumberCurrent OR (BIT_TO_USINT(sigs105112.4) * 4);

inRobotToolNumberRequest := 0;
inRobotToolNumberRequest := inRobotToolNumberRequest OR (BIT_TO_USINT(sigs105112.5) * 1);
inRobotToolNumberRequest := inRobotToolNumberRequest OR (BIT_TO_USINT(sigs105112.6) * 2);
inRobotToolNumberRequest := inRobotToolNumberRequest OR (BIT_TO_USINT(sigs105112.7) * 4);
inRobotReleaseTool := sigs113120.0;
inRobotGrabTool := sigs113120.1;
inProgramRunning := sigs113120.2; // Signal 115

// posedata.pc is running

// ]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_Robot">
      <LineId Id="9" Count="0" />
      <LineId Id="73" Count="0" />
      <LineId Id="68" Count="1" />
      <LineId Id="71" Count="1" />
    </LineIds>
    <LineIds Name="FB_Robot.Home_Robot">
      <LineId Id="10" Count="1" />
      <LineId Id="13" Count="1" />
      <LineId Id="12" Count="0" />
    </LineIds>
    <LineIds Name="FB_Robot.Program_Select">
      <LineId Id="15" Count="2" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Robot.Robot_Manual_Control">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Robot.RunHold_Robot">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Robot.Start_Robot">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Robot.Update_Status">
      <LineId Id="17" Count="0" />
      <LineId Id="6" Count="4" />
      <LineId Id="5" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="31" Count="6" />
      <LineId Id="30" Count="0" />
      <LineId Id="38" Count="1" />
      <LineId Id="94" Count="2" />
      <LineId Id="43" Count="0" />
      <LineId Id="55" Count="6" />
      <LineId Id="54" Count="0" />
      <LineId Id="63" Count="1" />
      <LineId Id="78" Count="0" />
      <LineId Id="84" Count="2" />
      <LineId Id="88" Count="4" />
      <LineId Id="74" Count="0" />
      <LineId Id="97" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="22" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>