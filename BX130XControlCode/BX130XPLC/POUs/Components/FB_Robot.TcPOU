<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_Robot" Id="{d50c368b-652f-4516-b34d-9545576d1fa6}" SpecialFunc="None">
    <Declaration><![CDATA[//Todo - Add flags for if communicating, program info, 
FUNCTION_BLOCK FB_Robot
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	robotPose 		: Structure_RobotPose;	//Stores robot pose

	//----------Inputs From Robot ----------
	x_pose_1 AT %I* : USINT; //Signal 1-8
	x_pose_2 AT %I* : USINT; //Signal 9-16
	y_pose_1 AT %I* : USINT; //Signal 17-25
	y_pose_2 AT %I* : USINT; //Signal 26-32
	z_pose_1 AT %I* : USINT; //Signal 33-40
	z_pose_2 AT %I* : USINT; //Signal 41-48
	o_pose_1 AT %I* : USINT; //Signal 49-56
	o_pose_2 AT %I* : USINT; //Signal 57-64
	a_pose_1 AT %I* : USINT; //Signal 65-72
	a_pose_2 AT %I* : USINT; //Signal 73-80
	t_pose_1 AT %I* : USINT; //Signal 81-88
	t_pose_2 AT %I* : USINT; //Signal 89-96
	motorIsOn		: BOOL; //Signal number 97
	robotError		: BOOL; //Signal 98
	robotAutomatic	: BOOL; //Signal 99
	robotIsHomed				: BOOL; //Signal 100
	robotInTeach				: BOOL; //Signal 101
	robotCycleStart				: BOOL; //Signal 102
	robotPowerOn				: BOOL; //Signal 103
	robotPoseDataBeingSent		: BOOL; //Signal 104
	robotEmergencyStop			: BOOL; //Signal 105
	robotBatteryAlarm			: BOOL; //Signal 106
	robotToolNumberCurrent		: USINT; //Signal 107-110
	robotToolNumberRequest		: USINT; //Signal 111-114
	programRunning				: BOOL; //Signal 115
	sigs97104 AT %I*			: USINT;
	sigs105112 AT %I*			: USINT;
	sigs113120 AT %I*			: USINT;
	
	//----------Outputs To Robot ----------
	robotTurnMotorOn			: BOOL; //Signal 1001
	robotResetError				: BOOL; //Signal 1002
	robotStartCycle				: BOOL; //Signal 1003
	robotResetProgram			: BOOL; //Signal 1004
	robotRunProgram				: BOOL; //Signal 1005
	externalRunHold		 		: BOOL; //Signal 1006
	robotHome					: BOOL; //Signal 1007
	robotToolReleased			: BOOL; //Signal 1008
	robotToolMatch				: BOOL; //Signal 1009
	robotProgramChoice			: USINT; //Signals 1017-1024
	sigs10011008	AT %Q*		: USINT;
	sigs10091016	AT %Q*		: USINT;
	sigs10171024	AT %Q*		: USINT;
	sigs10251032	AT %Q*		: USINT;
	sigs10331040	AT %Q*		: USINT;
	sigs10411048	AT %Q*		: USINT;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[Update_Status();

//Change request to home robot once robot is in home position
	IF robotIsHomed OR robotError THEN 
		robotHome := FALSE;
	END_IF]]></ST>
    </Implementation>
    <Method Name="Home_Robot" Id="{eca540c4-31fc-4643-aeb8-caefcff4553d}">
      <Declaration><![CDATA[//Send home command to robot
METHOD Home_Robot
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF robotIsHomed THEN
	robotHome := FALSE;
ELSE 
	robotHome := TRUE;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Program_Select" Id="{5ccc5e7e-14d0-4912-bf3c-54f9c88aeb76}">
      <Declaration><![CDATA[// Select the robot program based on HMI inputs

METHOD Program_Select
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="Robot_Manual_Control" Id="{ed6ccda4-2af5-42af-8ac3-98592d92e5da}">
      <Declaration><![CDATA[//Not Implemented
METHOD Robot_Manual_Control
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="RunHold_Robot" Id="{feac628f-72cf-4100-8d56-47c2e35d8c99}">
      <Declaration><![CDATA[METHOD RunHold_Robot
VAR_INPUT
	RunHold : BOOL; //True for run, False for hold
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[externalRunHold := RunHold;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Start_Robot" Id="{95ede5df-1a05-4c33-b6a8-dcc0ec83997b}">
      <Declaration><![CDATA[//Resume the Robot 
METHOD Start_Robot
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[externalRunHold := True;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Update_Status" Id="{1be56ac6-764b-4729-954d-f7379608e62a}">
      <Declaration><![CDATA[//Updates the robot pose, run status and IOs in Beckhoff system
//TODO make flag that verifies pose is being sent
METHOD Update_Status
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// RobotPose
robotPose.xPose := UINT_TO_INT(x_pose_2)*256 + UINT_TO_INT(x_pose_1) - 4000;
robotPose.yPose := UINT_TO_INT(y_pose_2)*256 + UINT_TO_INT(y_pose_1) - 4000;
robotPose.zPose := UINT_TO_INT(z_pose_2)*256 + UINT_TO_INT(z_pose_1) - 4000;
robotPose.oPose := UINT_TO_INT(o_pose_2)*256 + UINT_TO_INT(o_pose_1) - 400;
robotPose.aPose := UINT_TO_INT(a_pose_2)*256 + UINT_TO_INT(a_pose_1) - 400;
robotPose.tPose := UINT_TO_INT(t_pose_2)*256 + UINT_TO_INT(t_pose_1) - 400;

// Robot signals
sigs10011008.0 := robotTurnMotorOn;
sigs10011008.1 := robotResetError;
sigs10011008.2 := robotStartCycle;
sigs10011008.3 := robotResetProgram;
sigs10011008.4 := robotRunProgram;
sigs10011008.5 := externalRunHold;
sigs10011008.6 := robotHome;
sigs10011008.7 := robotToolReleased;
sigs10091016.0 := robotToolMatch;
sigs10171024   := robotProgramChoice;

motorIsOn := sigs97104.0;
robotError := sigs97104.1;
robotAutomatic := sigs97104.2;
robotIsHomed := sigs97104.3;
robotInTeach := sigs97104.4;
robotCycleStart := sigs97104.5;
robotPowerOn := sigs97104.6;
robotPoseDataBeingSent := sigs97104.7;
robotEmergencyStop := sigs105112.0;
robotBatteryAlarm := sigs105112.1;
robotToolNumberCurrent := 0;
robotToolNumberCurrent := robotToolNumberCurrent OR (BIT_TO_USINT(sigs105112.2) * 1);
robotToolNumberCurrent := robotToolNumberCurrent OR (BIT_TO_USINT(sigs105112.3) * 2);
robotToolNumberCurrent := robotToolNumberCurrent OR (BIT_TO_USINT(sigs105112.4) * 4);
robotToolNumberCurrent := robotToolNumberCurrent OR (BIT_TO_USINT(sigs105112.5) * 8);

robotToolNumberRequest := 0;
robotToolNumberRequest := robotToolNumberRequest OR (BIT_TO_USINT(sigs105112.6) * 1);
robotToolNumberRequest := robotToolNumberRequest OR (BIT_TO_USINT(sigs105112.7) * 2);
robotToolNumberRequest := robotToolNumberRequest OR (BIT_TO_USINT(sigs113120.0) * 4);
robotToolNumberRequest := robotToolNumberRequest OR (BIT_TO_USINT(sigs113120.1) * 8);

programRunning := sigs113120.2; // Signal 115

// posedata.pc is running

// ]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_Robot">
      <LineId Id="9" Count="0" />
      <LineId Id="73" Count="0" />
      <LineId Id="68" Count="1" />
      <LineId Id="71" Count="1" />
    </LineIds>
    <LineIds Name="FB_Robot.Home_Robot">
      <LineId Id="10" Count="1" />
      <LineId Id="13" Count="1" />
      <LineId Id="12" Count="0" />
    </LineIds>
    <LineIds Name="FB_Robot.Program_Select">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Robot.Robot_Manual_Control">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Robot.RunHold_Robot">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Robot.Start_Robot">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Robot.Update_Status">
      <LineId Id="17" Count="0" />
      <LineId Id="6" Count="4" />
      <LineId Id="5" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="31" Count="6" />
      <LineId Id="30" Count="0" />
      <LineId Id="38" Count="1" />
      <LineId Id="43" Count="0" />
      <LineId Id="55" Count="6" />
      <LineId Id="54" Count="0" />
      <LineId Id="63" Count="1" />
      <LineId Id="78" Count="0" />
      <LineId Id="84" Count="9" />
      <LineId Id="74" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="22" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>