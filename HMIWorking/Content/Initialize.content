<div id="Content1" data-tchmi-type="TcHmi.Controls.System.TcHmiContent" data-tchmi-top="0" data-tchmi-left="0" data-tchmi-opacity="1" data-tchmi-width="780" data-tchmi-height="500">


<script data-tchmi-target-attribute="data-tchmi-background-color" type="application/json">
{
  "color": "rgba(255, 255, 255, 1)"
}
</script>
<div id="ButtonHomeMotors" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="10" data-tchmi-left-unit="px" data-tchmi-text="Home Motors" data-tchmi-top="200" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-state-symbol="%s%Local.MAIN.fbMachine.bHMIHomeMotors%/s%">


</div>
<div id="ButtonHomeRobot" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="10" data-tchmi-left-unit="px" data-tchmi-text="Home Robot" data-tchmi-top="140" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-state-symbol="%s%Local.MAIN.fbMachine.bHMIHomeRobot%/s%">





<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "ButtonHomeRobot.onInitialized",
    "actions": []
  }
]
</script>
</div>
<div id="InitializeMenu" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="53" data-tchmi-height-unit="px" data-tchmi-left="10" data-tchmi-left-unit="px" data-tchmi-text="Initialize Menu" data-tchmi-top="10" data-tchmi-top-unit="px" data-tchmi-width="274" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-text-font-size="30">
</div>
<div id="HMIChooseProgram" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="73" data-tchmi-height-unit="px" data-tchmi-left="399" data-tchmi-left-unit="px" data-tchmi-text="Choose Program" data-tchmi-top="392" data-tchmi-top-unit="px" data-tchmi-width="217" data-tchmi-width-unit="px" data-tchmi-word-wrap="true">

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "HMIChooseProgram.onPressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%RegionMain::TargetContent%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:framework#/definitions/ContentPath",
          "value": "Content/SelectProgram.content"
        },
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmi_Controls_Beckhoff_TcHmiImage_2" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiImage" data-tchmi-height="354" data-tchmi-height-unit="px" data-tchmi-left="233" data-tchmi-left-unit="px" data-tchmi-src="Images/Robot.png" data-tchmi-top="10" data-tchmi-top-unit="px" data-tchmi-width="528" data-tchmi-width-unit="px">
</div>

<script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
{
  "left": 1,
  "right": 1,
  "top": 1,
  "bottom": 1,
  "leftUnit": "px",
  "rightUnit": "px",
  "topUnit": "px",
  "bottomUnit": "px"
}
</script>
<div id="ToggleOpenCloseDoor" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiToggleButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="10" data-tchmi-left-unit="px" data-tchmi-text="Close Door" data-tchmi-top="260" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-state-symbol="%s%Local.MAIN.fbMachine.bHMICloseDoor%/s%">

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "ToggleOpenCloseDoor.onStatePressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%ToggleOpenCloseDoor::Text%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/String",
          "value": "Open Door"
        },
        "asyncWait": true
      }
    ]
  },
  {
    "event": "ToggleOpenCloseDoor.onStateReleased",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%ToggleOpenCloseDoor::Text%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/String",
          "value": "Close Door"
        },
        "asyncWait": true
      }
    ]
  },
  {
    "event": "ToggleOpenCloseDoor.onInitialized",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%Local.MAIN.fbMachine.fbEnclosure.doorIsOpen%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/String",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%ToggleOpenCloseDoor::ToggleState%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ToggleState",
                  "value": "Normal"
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%ToggleOpenCloseDoor::ToggleState%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ToggleState",
                  "value": "Active"
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="ToggleTableLock" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiToggleButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="10" data-tchmi-left-unit="px" data-tchmi-text="Lock Tables" data-tchmi-top="320" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-state-symbol="%s%Local.MAIN.fbMachine.bHMILockTables%/s%">

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "ToggleTableLock.onStatePressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%ToggleTableLock::Text%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/String",
          "value": "Release Tables"
        },
        "asyncWait": true
      }
    ]
  },
  {
    "event": "ToggleTableLock.onStateReleased",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%ToggleTableLock::Text%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/String",
          "value": "Lock Tables"
        },
        "asyncWait": true
      }
    ]
  },
  {
    "event": "ToggleTableLock.onInitialized",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "symbolExpression": "%s%Local.MAIN.fbMachine.fbEnclosure.cylinderTableEast%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              },
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%Local.MAIN.fbMachine.fbEnclosure.cylinderTableWest%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": "AND"
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%ToggleTableLock::ToggleState%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ToggleState",
                  "value": "Active"
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%ToggleTableLock::ToggleState%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ToggleState",
                  "value": "Normal"
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="ToggleRollers" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiToggleButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="10" data-tchmi-left-unit="px" data-tchmi-text="Raise Rollers" data-tchmi-top="380" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-state-symbol="%s%Local.MAIN.fbMachine.bHMILowerRaiseRollers%/s%">

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "ToggleRollers.onStatePressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%ToggleRollers::Text%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/String",
          "value": "Lower Rollers"
        },
        "asyncWait": true
      }
    ]
  },
  {
    "event": "ToggleRollers.onStateReleased",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%ToggleRollers::Text%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/String",
          "value": "Raise Rollers"
        },
        "asyncWait": true
      }
    ]
  },
  {
    "event": "ToggleRollers.onInitialized",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%Local.MAIN.fbMachine.fbGantry.cylindersCentreNorth%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              },
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%Local.MAIN.fbMachine.fbGantry.cylindersCentreSouth%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": "AND"
              },
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%Local.MAIN.fbMachine.fbGantry.cylindersNorth%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": "AND"
              },
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/String",
                  "symbolExpression": "%s%Local.MAIN.fbMachine.fbGantry.cylindersSouth%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": "AND"
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%ToggleRollers::ToggleState%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ToggleState",
                  "value": "Active"
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%ToggleRollers::ToggleState%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ToggleState",
                  "value": "Normal"
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="ToggleSpindleWarmup" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiToggleButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="10" data-tchmi-left-unit="px" data-tchmi-text="Warmup Spindle" data-tchmi-top="440" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="px" data-tchmi-word-wrap="true" data-tchmi-state-symbol="%s%Local.MAIN.fbMachine.bHMIWarmupSpindle%/s%">

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "ToggleSpindleWarmup.onStatePressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%ToggleSpindleWarmup::Text%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/String",
          "value": "Stop Spindle"
        },
        "asyncWait": true
      }
    ]
  },
  {
    "event": "ToggleSpindleWarmup.onStateReleased",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%ToggleSpindleWarmup::Text%/ctrl%",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/String",
          "value": "Warmup Spindle"
        },
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "Content1.onInitialized",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "symbolExpression": "%s%C1007.MAIN.fbMachine.fbRobot.inRobotAtHome%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%ButtonHomeRobot::IsEnabled%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/Boolean",
                  "value": false
                },
                "asyncWait": true
              },
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%ButtonHomeRobot::Text%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/String",
                  "value": "Robot at Home"
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%ButtonHomeRobot::IsEnabled%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/Boolean",
                  "value": true
                },
                "asyncWait": true
              },
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%ButtonHomeRobot::Text%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/String",
                  "value": "Home Robot"
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      },
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "symbolExpression": "%s%C1007.GVL_Axes.AxisWest.Status.Homed%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%ButtonHomeMotors::Text%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/String",
                  "value": "Motors Homed"
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%ButtonHomeMotors::Text%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/String",
                  "value": "Home Motors"
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      },
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "symbolExpression": "%s%C1007.MAIN.fbMachine.fbSpindle.spindleIsWarm%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%ToggleSpindleWarmup::Text%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/String",
                  "value": "Spindle Warm"
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": []
          }
        ],
        "asyncWait": true
      }
    ]
  },
  {
    "event": "Content1.onPressed",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "symbolExpression": "%s%C1007.MAIN.fbMachine.fbRobot.inRobotAtHome%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%ButtonHomeRobot::IsEnabled%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/Boolean",
                  "value": false
                },
                "asyncWait": true
              },
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%ButtonHomeRobot::Text%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/String",
                  "value": "Robot at Home"
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%ButtonHomeRobot::IsEnabled%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/Boolean",
                  "value": true
                },
                "asyncWait": true
              },
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%ButtonHomeRobot::Text%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/String",
                  "value": "Home Robot"
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      },
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "symbolExpression": "%s%C1007.GVL_Axes.AxisWest.Status.Homed%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%ButtonHomeMotors::Text%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/String",
                  "value": "Motors Homed"
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%ButtonHomeMotors::Text%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/String",
                  "value": "Home Motors"
                },
                "asyncWait": true
              }
            ]
          }
        ],
        "asyncWait": true
      },
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "symbolExpression": "%s%C1007.MAIN.fbMachine.fbSpindle.spindleIsWarm%/s%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%ToggleSpindleWarmup::Text%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/String",
                  "value": "Spindle Warm"
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": []
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
<div id="TcHmiRequestedTool" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiCombobox" data-tchmi-auto-focus-out="true" data-tchmi-combobox-text="Select" data-tchmi-height="26" data-tchmi-height-unit="px" data-tchmi-left="10" data-tchmi-left-unit="px" data-tchmi-top="104" data-tchmi-top-unit="px" data-tchmi-width="223" data-tchmi-width-unit="px" data-tchmi-text="Current Tool">
<script data-tchmi-target-attribute="data-tchmi-content-padding" type="application/json">
{
  "top": 3,
  "right": 3,
  "bottom": 3,
  "left": 3
}
</script>


<script data-tchmi-target-attribute="data-tchmi-src-data" type="application/json">
[
  {
    "text": "Sawblade",
    "value": 0.0
  },
  {
    "text": "None",
    "value": 7
  },
  {
    "text": "Half Inch",
    "value": 4.0
  },
  {
    "text": "Quarter Inch",
    "value": 2
  }
]
</script>
</div>
<div id="TcHmiCurrentTool" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiCombobox" data-tchmi-auto-focus-out="true" data-tchmi-combobox-text="Select" data-tchmi-height="26" data-tchmi-height-unit="px" data-tchmi-left="10" data-tchmi-left-unit="px" data-tchmi-top="68" data-tchmi-top-unit="px" data-tchmi-width="223" data-tchmi-width-unit="px" data-tchmi-text="Current Tool">
<script data-tchmi-target-attribute="data-tchmi-content-padding" type="application/json">
{
  "top": 3,
  "right": 3,
  "bottom": 3,
  "left": 3
}
</script>


<script data-tchmi-target-attribute="data-tchmi-src-data" type="application/json">
[
  {
    "text": "Sawblade",
    "value": 0.0
  },
  {
    "text": "None",
    "value": 7.0
  },
  {
    "text": "Half Inch",
    "value": 4.0
  },
  {
    "text": "Quarter Inch"
  }
]
</script>
</div>
</div>